#!/usr/bin/bash

#
# Copyright (C) 2018 Nethesis S.r.l.
# http://www.nethesis.it - nethserver@nethesis.it
#
# This script is part of NethServer.
#
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
#
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with NethServer.  If not, see COPYING.
#

attempts=5
srcp=$1 ; shift
dest=$1 ; shift

source /etc/porthos/xrsync.conf

function exithandler() {
    if [[ $? != 0 ]]; then
        # If exit code is non-zero, copy error file contents to syslog and stderr
        logger -t xrsync -s -f "${tmperr}"
    else
        # Log to syslog only
        logger -t xrsync -f "${tmperr}"
    fi
    rm -f "${tmperr}"
}

tmperr=$(mktemp)
trap exithandler EXIT

src_seed=$RANDOM

if [[ "${srcp}" == rsync-pool://* ]]; then
    poolk=${srcp#rsync-pool://}
    poolk=${poolk%%/*}
    poolp=${srcp#rsync-pool://$poolk}
    read -r -a src_list <<<"${rsync_pool[$poolk]}"
else
    src_list=("${srcp}")
    poolp=""
fi

if [[ "${#src_list[@]}" == "0" ]]; then
    echo "[ERROR] The list of sources is empty" 1>&2
    exit 1
fi

for ((I=1; I <= attempts; I++)); do
    src_id=$(( (src_seed + I) % ${#src_list[@]} ))
    src="${src_list[$src_id]}${poolp}"
    rsync -aqSH --no-super --no-perms --chmod=ugo=rwX --no-g --no-o "${@}" "${src}" "${dest}" 2>>"${tmperr}"
    ret_rsync=$?
    if [[ $ret_rsync == 0 ]]; then
        echo "sync-success from ${src} to ${dest}" >>"${tmperr}"
        exit 0
    elif [[ $ret_rsync == 1 ]]; then
        echo "[ERROR] rsync bad syntax" >>"${tmperr}"
        exit 1
    elif [[ $ret_rsync == 20 ]]; then
        echo "[ERROR] rsync signal caught" >>"${tmperr}"
        exit 2
    fi
    echo "[WARNING] $(date -R) rsync from $src failed with code $ret_rsync; attempt $I of ${attempts}..." >>"${tmperr}"
    ((I < attempts)) && sleep 1
done

echo "[ERROR] rsync from $src failed ${attempts} times. Aborted." >>"${tmperr}"
exit 1
